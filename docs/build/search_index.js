var documenterSearchIndex = {"docs":
[{"location":"#FrechetDist.jl","page":"Home","title":"FrechetDist.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Compute the Fr√©chet distance between curves.","category":"page"},{"location":"#Package-Features","page":"Home","title":"Package Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Provides algorithm for computing the discrete, VE, regular Frechet  distance between curves. Supports also the retractable version.","category":"page"},{"location":"#Basic-geometric-types","page":"Home","title":"Basic geometric types","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Modules = [FrechetDist.cg]\nOrder   = [:type, :function]","category":"page"},{"location":"#FrechetDist.cg.Line","page":"Home","title":"FrechetDist.cg.Line","text":"Line in N dimensions.\n\n`p` is a point on the line and `u` is the direction vector (not\nnecessarily normalized). Parametrised as $p + ut$\n\n\n\n\n\n","category":"type"},{"location":"#FrechetDist.cg.Point","page":"Home","title":"FrechetDist.cg.Point","text":"Point\n\nPoint in N dimensions. Implemented currently as a struct with\nStaticArray for values. It is templated, with `N` for dimension,\nand `T` for underlying type.\n\n\n\n\n\n","category":"type"},{"location":"#FrechetDist.cg.Polygon_read_plt_file-Tuple{Any}","page":"Home","title":"FrechetDist.cg.Polygon_read_plt_file","text":"Polygon_read_plt_file\n\nReads a .plt file into a polygon (2d floating point).\n\n\n\n\n\n","category":"method"},{"location":"#Function-Documentation","page":"Home","title":"Function Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"frechet_c_compute\nfrechet_c_approx\nfrechet_dist_upper_bound","category":"page"},{"location":"#FrechetDist.frechet_c_compute","page":"Home","title":"FrechetDist.frechet_c_compute","text":"frechet_c_compute\n\nCompute the exact continuous (monotone) Frechet distance between the two polygons. It should be reasonably fast.\n\nThis function is somewhat slower than the approximate versions. Use it only if you really want the exact answer. Consider using frechetcontinousapprox instead.\n\nDetails\n\nThis works by first computing a very rough approximation, followed by distance senstiave simplification of the curves. It then compute the monotone frver distance between the simplified curves, and it combine it to get a distance between the two original cuves. It makre sure the answers are the same, otherwise, it repeates with a finer simplification/approximation till they are equal.\n\nFinally, the algorithm uses the frverwithoffests distance between the two simplified curves to comptue a lower bound, and make sure this is equal to the Frechet distance computed. If they are equal, then the upper/lower bounds on the Frechet distance of the two curves are the same, which implies that the computed distance is indeed the desired Frechet distance.\n\nMore details\n\nTo really ensure converges, the monotone distance computed between the simplification is computed using refinement, so tha the ve_r distance\n\n\n\n\n\n","category":"function"},{"location":"#FrechetDist.frechet_c_approx","page":"Home","title":"FrechetDist.frechet_c_approx","text":"frechet_c_approx\n\nApproximates the continuous Frechet distance between the two input curves. Returns a monotone morphing realizing it.\n\nArguments\n\napprox : The output morhing has Frechet distance <= approx*optimal.\n\nImportantly, approx can be larger than 2, if you want a really rough approximation.\n\n\n\n\n\n","category":"function"},{"location":"#FrechetDist.frechet_dist_upper_bound","page":"Home","title":"FrechetDist.frechet_dist_upper_bound","text":"frechet_dist_upper_bound\n\nReturns a rough upper bound on the Frechet distance between the two curves. This upper bound is on the continuous distance. No guarenteee on how bad the approximation is. This is used as a starting point for real approximation of the Frechet distance, and should not be used otherwise.\n\n\n\n\n\n","category":"function"}]
}
